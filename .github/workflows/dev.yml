# This is a basic workflow to help you get started with Actions

name: Deploy


concurrency: 
  group: deploy-dev
  cancel-in-progress: true


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3


      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11


      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew


      - name: Build with Gradle
        run: ./gradlew clean build


      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: travely-dev-spring-boot-server
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --build-arg JAR_FILE=build/libs/\*.jar -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          aws ecs describe-task-definition \
            --task-definition arn:aws:ecs:ap-northeast-2:640836968423:task-definition/spring-boot-server \
            | jq '.taskDefinition.containerDefinitions[].image = "{{ image }}"' \
            | jq '.taskDefinition' \
            > task-definition.json
            
            
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: spring-boot
          image: ${{ steps.build-image.outputs.image }}


      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: travely-dev-spring-service
          cluster: travely-dev-spring-boot-cluster
          wait-for-service-stability: true
  #         force-new-deployment: true
